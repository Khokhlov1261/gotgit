import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import date, datetime
import requests
from bs4 import BeautifulSoup
import schedule
import time


def job():
    print("=== –ó–∞–ø—É—Å–∫ –æ—Ç—á–µ—Ç–∞ ===")

    print("üßê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google")
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive.file"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("js.json", scope)
    client = gspread.authorize(creds)
    spreadsheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1IpV7hoUuOmbgEfr1YXNqRF2mXoV7s3eAEiltwB-Wn7c/edit?gid=1161211803#gid=1161211803")

    url = "https://docs.google.com/forms/d/e/1FAIpQLSe1vaEAthSHfjmQB51i-hAVPc6dBoCMAyi8sPAejrIhLz2tuw/formResponse"
    response = requests.get(url)
    if response.status_code != 200:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ä–º—É")
        exit()

    soup = BeautifulSoup(response.text, 'html.parser')
    fbzx_input = soup.find("input", {"name": "fbzx"})
    if not fbzx_input:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ fbzx")
        exit()
    fbzx_value = fbzx_input["value"]




    print("üò§ –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–≥–æ –ª–∏—Å—Ç–∞")
    def search_for_me(sheet, role = "–ó—ã—Ä—è–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä",column_index = 1):
        today_for_search = datetime.today().strftime("%d.%m.%Y")
        table_1 = sheet.get_all_values()
        matching = [col for col in table_1 if col[0] == today_for_search and col[column_index] == role]
        return matching

    worksheet = spreadsheet.worksheet('2')
    searching_today = search_for_me(worksheet, role= '–ó—ã—Ä—è–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä', column_index=1)

    if not searching_today:
        print("ü•∏ –ò—â—É –¥—Ä—É–≥–æ–π –ª–∏—Å—Ç!")
        worksheet = spreadsheet.worksheet('3')
        searching_today = search_for_me(worksheet)

    if not searching_today:
        print("ü•∏ –ò—â—É –¥—Ä—É–≥–æ–π –ª–∏—Å—Ç!")
        worksheet = spreadsheet.worksheet('4')
        print("ü•∏ –ò—â—É –¥—Ä—É–≥–æ–π –ª–∏—Å—Ç!")
        searching_today = search_for_me(worksheet)

    if not searching_today:
        print("ü§™ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        exit()

    print("ü§ë –õ–∏—Å—Ç –Ω–∞–π–¥–µ–Ω, —Å–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ!")
    today = datetime.today().strftime("%d.%m.%Y")
    searching_today = [row for row in searching_today if row[0] == today]

    day, name_month, year = today.split(".")

    start_day = end_day = store = manager = cash = terminal = qr_code = \
        in_store_wallet = get_from_wallet = type_of_operation = who  = ""
    terminal_in_1C = all_the_day = 0

    for row in searching_today:
        if str(row[1]) == "–ó—ã—Ä—è–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä":
            match = row[3]
            check, start_day, end_day, store = str(match).split(",")
            manager = row[1]
            cash = str(row[4]).replace('\xa0', '').replace(' ', '').strip()
            terminal = str(row[7]).replace('\xa0', '').replace(' ', '').strip()
            qr_code = str(row[9]).replace('\xa0', '').replace(' ', '').strip()
            in_store_wallet = str(row[6]).replace('\xa0', '').replace(' ', '').strip()
            all_the_day = int(terminal) + int(qr_code) + int(cash)
            terminal_in_1C = int(terminal) + int(qr_code)

    inkass = search_for_me(worksheet, role = "–ò–Ω–∫–∞—Å—Å/–í–Ω–µ—Å–µ–Ω–∏–µ", column_index= 2)
    for row in inkass:
        get_from_wallet = str(row[5]).replace('\xa0', '').replace(' ', '').strip()
        type_of_operation = str(row[3])
        who = str(row[1])

    store_report = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    if store == "–∫—Ä–±3":
        store_report = "–°–æ–ª–∏–∫–∞–º—Å–∫ –ö—Ä.–ë—É–ª—å–≤–∞—Ä 3"
    elif store == "—Å–µ–≤55":
        store_report = "–°–æ–ª–∏–∫–∞–º—Å–∫ –°–µ–≤–µ—Ä–Ω–∞—è 55"
    elif store == "–º–∏—Ä–∞83":
        store_report = "–ë–µ—Ä–µ–∑–Ω–∏–∫–∏ –ú–∏—Ä–∞ 110"
    else:
        print("üò¨ –ù–µ —É–¥–∞–ª–∞—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω!")


    data = {
            "entry.1834620662_day": day,
            "entry.1834620662_month": name_month,
            "entry.1834620662_year": year,
            "entry.1390867807_hour": start_day,
            "entry.1390867807_minute": "00",
            "entry.948603546_hour": end_day,
            "entry.948603546_minute": "00",
            "entry.62903313": store_report,
            "entry.1314851336": manager,
            "entry.417024138": cash,
            "entry.1622716671": cash,
            "entry.898291640": terminal_in_1C,
            "entry.1691390490": terminal,
            "entry.53970266": in_store_wallet,
            "entry.1408529044": qr_code,
            "entry.1488218029": get_from_wallet,
            "entry.527465824": type_of_operation,
            "entry.536482182": who,
            "fbzx": fbzx_value,
            "pageHistory": "0,1,2,1,3,1,4,1,5,1,6,1,7,1,8,1,9,1,10,1,11,1,12,1,15,1,18,1,19",
            "fvv": "1",
        }


    print("–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞: " + today)
    print("–ù–∞—á–∞–ª–æ —Å–º–µ–Ω—ã: " + start_day + ":00 –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–º–µ–Ω—ã: " + end_day + ":00")
    print("–ú–∞–≥–∞–∑–∏–Ω: " + store_report + " –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç: " + manager)
    print("–ù–∞–ª–∏—á–Ω—ã–µ –≤ 1–°: " + cash + " –≠–∫–≤–∞–π—Ä–∏–Ω–≥ 1–°: " + str(terminal_in_1C))
    print("–°–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤: " + str(terminal) + " QR-–∫–æ–¥: " + str(qr_code))
    print("|||||–í–°–ï–ì–û –ó–ê –î–ï–ù–¨|||| " + str(all_the_day))
    print("–ö–∞—Å—Å–∞ –Ω–∞ –∫–æ–Ω–µ—Ü —Å–º–µ–Ω—ã: " + in_store_wallet)
    print("–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è —Å—É–º–º–∞: " + get_from_wallet + " " + type_of_operation + " " + who)



    if check == "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å":
        print("üëª –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞!")
        send_response = requests.post(url, data=data)
        if send_response.status_code == 200:
            print("üôÉ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã: {send_response.status_code}")

    else:
        print("üò´ –ù–µ—Ç –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å")

schedule.every().day.at("17:28").do(job)
print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞. –û–∂–∏–¥–∞–µ–º 22:28 (17:28pm –ø–æ UTC) –∫–∞–∂–¥—ã–π –¥–µ–Ω—å...")
while True:
    schedule.run_pending()
    time.sleep(30)





